name: build and test

on: [push]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
      
      - name: Build with Maven
        run: mvn -B clean verify

      - name: Run tests
        run: mvn test
      
      # - name: SonarQube Analysis
      #   uses: sonarsource/sonarqube-scan-action@v2
      #   with:
      #     projectBaseDir: .
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONARCUBE_SERVER }}
      #     SONAR_HOST_URL: https://epencephalic-wilber-multiovulated.ngrok-free.dev

      # - name: SonarQube Quality Gate
      #   uses: sonarsource/sonarqube-quality-gate-action@v1
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONARCUBE_SERVER }}
      #     SONAR_HOST_URL: https://epencephalic-wilber-multiovulated.ngrok-free.dev

      # - name: Configure Maven settings for Nexus
      #  run: |
      #      mkdir -p ~/.m2
      #      cat > ~/.m2/settings.xml <<EOF
      #     <settings>
      #        <servers>
      #          <server>
      #            <id>nexus</id>
      #            <username>${{ secrets.NEXUS_USERNAME }}</username>
      #            <password><![CDATA[${{ secrets.NEXUS_PASSWORD }}]]></password>
      #          </server>
      #        </servers>
      #      </settings>
      #      EOF

      # - name: Deploy to Nexus Repository
      #  run: mvn deploy -DskipTests
       
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      
      - name: Build and push image dockerhub
        uses: Docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/database_service_project:latest
      
      - name: Set up Kubeconfig 
        run: | 
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
          cat ~/.kube/config
      - name: Test the conntection
        run:  |
          kubectl apply -f k8/deployment.yml 
          kubectl get pods
          kubectl get deployments
              



